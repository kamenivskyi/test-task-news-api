{"version":3,"sources":["redux/news/newsTypes.js","redux/news/newsReducer.js","redux/auth/authTypes.js","redux/auth/authReducer.js","redux/rootReducer.js","redux/store.js","pages/Home/Home.jsx","redux/news/newsActions.js","services/newsService.js","services/utils/newsPropTypes.js","components/ExternalLink/ExternalLink.jsx","components/CardItem/CardItem.jsx","components/Spinner/Spinner.jsx","components/ErrorIndicator/ErrorIndicator.jsx","pages/News/News.jsx","pages/NotFound/NotFound.jsx","redux/auth/authActions.js","services/utils/localStorage.js","pages/Profile/Profile.jsx","pages/Login/Login.jsx","routes.js","components/Header/Header.jsx","App.jsx","serviceWorker.js","index.js"],"names":["newsTypes","GET_NEWS_LIST","GET_NEWS_LIST_LOADING","GET_NEWS_LIST_ERROR","initialState","news","error","loading","newsReducer","state","action","type","Types","payload","authTypes","SET_AUTH_STATUS_TRUE","SET_AUTH_STATUS_FALSE","isLoggedIn","combineReducers","auth","authReducer","middlewares","thunk","logger","store","createStore","rootReducer","applyMiddleware","Home","getNews","_apiKey","_apiBase","getResource","url","a","fetch","res","ok","Error","status","json","articles","setLoading","PropTypes","string","ExternalLink","content","children","rest","target","rel","CardItem","data","title","description","author","urlToImage","publishedAt","className","src","alt","style","height","objectFit","href","Spinner","disabled","role","aria-hidden","ErrorIndicator","connect","getNewsList","dispatch","console","log","response","useEffect","cancelled","renderItems","map","item","key","NotFound","props","to","display","margin","setAuthStatusFalse","getItemFromStorage","JSON","parse","localStorage","getItem","setItemToStorage","value","stringify","setItem","handleStorageChanges","window","addEventListener","removeEventListener","maxWidth","Login","userName","userPassword","setAuthStatusTrue","handleInputChange","name","setState","handleSubmitForm","event","preventDefault","checkAuthData","password","alert","this","onSubmit","placeholder","autoFocus","onChange","required","React","Component","Routes","exact","path","component","News","Profile","links","label","linkTo","classes","renderLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f252d4bd.chunk.js","sourcesContent":["const newsTypes = {\r\n  GET_NEWS_LIST: 'GET_NEWS_LIST',\r\n  GET_NEWS_LIST_LOADING: 'GET_NEWS_LIST_LOADING',\r\n  GET_NEWS_LIST_ERROR: 'GET_NEWS_LIST_ERROR'\r\n};\r\n\r\nexport default newsTypes;\r\n","import Types from './newsTypes';\r\n\r\nconst initialState = {\r\n  news: [],\r\n  error: false,\r\n  loading: false\r\n};\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.GET_NEWS_LIST:\r\n      return {\r\n        ...state,\r\n        news: action.payload,\r\n        loading: false\r\n      };\r\n    case Types.GET_NEWS_LIST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        loading: false\r\n      };\r\n    case Types.GET_NEWS_LIST_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default newsReducer;\r\n","const authTypes = {\r\n  SET_AUTH_STATUS_TRUE: 'SET_AUTH_STATUS_TRUE',\r\n  SET_AUTH_STATUS_FALSE: 'SET_AUTH_STATUS_FALSE'\r\n};\r\n\r\nexport default authTypes;\r\n","import Types from './authTypes';\r\n\r\nconst initialState = {\r\n  isLoggedIn: false\r\n};\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.SET_AUTH_STATUS_TRUE:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true\r\n      };\r\n    case Types.SET_AUTH_STATUS_FALSE:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default newsReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport newsReducer from './news/newsReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nexport default combineReducers({\r\n  news: newsReducer,\r\n  auth: authReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst middlewares = [thunk, logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h2>Home page</h2>\r\n    <p>\r\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ducimus officia\r\n      provident sunt excepturi? Eius recusandae ipsa vero deserunt sint sed\r\n      repellat quis voluptate, deleniti repellendus assumenda soluta illo nihil\r\n      nam!\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import Types from './newsTypes';\r\n\r\nimport NewsService from '../../services/newsService';\r\n\r\nconst { getNews } = new NewsService();\r\n\r\nexport const getNewsList = () => async dispatch => {\r\n  try {\r\n    dispatch(setLoading());\r\n\r\n    const data = await getNews();\r\n\r\n    console.log(data);\r\n\r\n    dispatch({ type: Types.GET_NEWS_LIST, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: Types.GET_NEWS_LIST_ERROR,\r\n      payload: error.response\r\n    });\r\n  }\r\n};\r\n\r\nconst setLoading = () => ({ type: Types.GET_NEWS_LIST_LOADING });\r\n","class NewsService {\r\n  _apiKey = 'bfc2f3acc4214df2ba209a463899a605';\r\n  _apiBase = 'https://newsapi.org/v2';\r\n\r\n  getResource = async url => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch the ${url}, received: ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  };\r\n\r\n  getNews = async () => {\r\n    const res = await this.getResource(\r\n      `/top-headlines?country=us&apiKey=${this._apiKey}`\r\n    );\r\n    return res.articles;\r\n  };\r\n}\r\nexport default NewsService;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const newsPropTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  author: PropTypes.string,\r\n  url: PropTypes.string,\r\n  urlToImage: PropTypes.string,\r\n  publishedAt: PropTypes.string,\r\n  content: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ExternalLink = ({ children: content, ...rest }) => (\r\n  <a {...rest} target='_blank' rel='noopener noreferer'>\r\n    {content}\r\n  </a>\r\n);\r\n\r\nExternalLink.propTypes = {\r\n  content: PropTypes.node\r\n};\r\n\r\nexport default ExternalLink;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { newsPropTypes } from '../../services/utils/newsPropTypes';\r\nimport ExternalLink from '../ExternalLink/ExternalLink';\r\n\r\nconst CardItem = ({ data }) => {\r\n  const {\r\n    title,\r\n    description,\r\n    author,\r\n    url,\r\n    urlToImage,\r\n    publishedAt,\r\n    content\r\n  } = data;\r\n\r\n  if (!data) return null;\r\n\r\n  const reserveImg = 'https://via.placeholder.com/150.jpg/';\r\n\r\n  return (\r\n    <div className='col-sm-6 col-md-4 col-lg-3 mt-2'>\r\n      <div className='card'>\r\n        <img\r\n          src={urlToImage || reserveImg}\r\n          className='card-img-top'\r\n          alt={title || ''}\r\n          style={{ height: '150px', objectFit: 'cover' }}\r\n        />\r\n        <div className='card-body'>\r\n          {title && <h5 className='card-title'>{title}</h5>}\r\n          {description && <p className='card-text'>{description}</p>}\r\n          {content && <p className='card-text'>{content}</p>}\r\n        </div>\r\n        <ul className='list-group list-group-flush'>\r\n          {author && <li className='list-group-item'>Author: {author}</li>}\r\n          {publishedAt && (\r\n            <li className='list-group-item'>Published at: {publishedAt}</li>\r\n          )}\r\n        </ul>\r\n        {url && (\r\n          <div className='card-body'>\r\n            <ExternalLink href={url} className='card-link'>\r\n              Link\r\n            </ExternalLink>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCardItem.propTypes = {\r\n  data: PropTypes.shape(newsPropTypes)\r\n};\r\n\r\nexport default CardItem;\r\n","import React from 'react';\r\n\r\nconst Spinner = () => (\r\n  <div className='m-auto text-center py-3'>\r\n    <button className='btn btn-dark' type='button' disabled>\r\n      <span\r\n        className='spinner-border spinner-border-sm'\r\n        role='status'\r\n        aria-hidden='true'\r\n      ></span>\r\n      <span className='sr-only'>Loading...</span>\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nconst ErrorIndicator = () => (\r\n  <div>\r\n    <h2 className='text-danger text-center'> Oops, something went wrong!</h2>\r\n  </div>\r\n);\r\n\r\nexport default ErrorIndicator;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getNewsList } from '../../redux/news/newsActions';\r\n\r\nimport { newsPropTypes } from '../../services/utils/newsPropTypes';\r\n\r\nimport CardItem from '../../components/CardItem/CardItem';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport ExternalLink from '../../components/ExternalLink/ExternalLink';\r\nimport ErrorIndicator from '../../components/ErrorIndicator/ErrorIndicator';\r\n\r\nconst News = ({ news, loading, getNewsList, error }) => {\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n\r\n    if (!cancelled) {\r\n      getNewsList();\r\n    }\r\n\r\n    return () => (cancelled = true);\r\n  }, [getNewsList]);\r\n\r\n  const renderItems = news.map(item => (\r\n    <CardItem data={item} key={item.title} />\r\n  ));\r\n\r\n  if (error) {\r\n    return <ErrorIndicator />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className='text-center'>News</h2>\r\n      <div className='row'>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            {renderItems}\r\n            <p className='text-center col-12 my-3'>\r\n              NEWS API -\r\n              <ExternalLink href='https://newsapi.org/'>\r\n                https://newsapi.org/\r\n              </ExternalLink>\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nNews.propTypes = {\r\n  news: PropTypes.arrayOf(PropTypes.shape(newsPropTypes)),\r\n  getNewsList: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ news: { news, loading, error } }) => ({\r\n  news,\r\n  loading,\r\n  error\r\n});\r\n\r\nexport default connect(mapStateToProps, { getNewsList })(News);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = props => {\r\n  const notFoundImg =\r\n    'https://klondike-studio.ru/images/wiki/development/error-404-page.jpg';\r\n\r\n  return (\r\n    <div className='text-center'>\r\n      <h2 className='py-2'>Not found 404</h2>\r\n      <img className='text-center' src={notFoundImg} alt='' />\r\n      <Link\r\n        to='/'\r\n        style={{\r\n          display: 'block',\r\n          margin: '20px auto'\r\n        }}\r\n      >\r\n        <button type='button' className='btn btn-dark'>\r\n          Back to home page\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import Types from './authTypes';\r\n\r\nexport const setAuthStatusTrue = () => ({\r\n  type: Types.SET_AUTH_STATUS_TRUE\r\n});\r\n\r\nexport const setAuthStatusFalse = () => ({\r\n  type: Types.SET_AUTH_STATUS_FALSE\r\n});\r\n","export const getItemFromStorage = key => JSON.parse(localStorage.getItem(key));\r\n\r\nexport const setItemToStorage = (key, value) =>\r\n  JSON.stringify(localStorage.setItem(key, JSON.stringify(value)));\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { setAuthStatusFalse } from '../../redux/auth/authActions';\r\n\r\nimport { getItemFromStorage } from '../../services/utils/localStorage';\r\n\r\nconst Profile = ({ isLoggedIn, setAuthStatusFalse }) => {\r\n  const handleStorageChanges = () => {\r\n    if (!getItemFromStorage('isAuthorized')) {\r\n      setAuthStatusFalse();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('storage', handleStorageChanges);\r\n\r\n    return () => window.removeEventListener('storage', handleStorageChanges);\r\n  }, [getItemFromStorage('isAuthorized')]);\r\n\r\n  const defaultImgUrl =\r\n    'https://media4.s-nbcnews.com/j/newscms/2016_36/1685951/ss-160826-twip-05_8cf6d4cb83758449fd400c7c3d71aa1f.fit-760w.jpg';\r\n\r\n  if (!isLoggedIn) {\r\n    return <Redirect to='/login' />;\r\n  }\r\n\r\n  return (\r\n    <article className='text-center'>\r\n      <h2> Profile</h2>\r\n      <img src={defaultImgUrl} alt='' style={{ maxWidth: '100%' }} />\r\n      <p className='py-2'>\r\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Excepturi\r\n        repellat doloremque alias nostrum officia et rem vel repellendus\r\n        architecto voluptate beatae dolorem aliquid ea ducimus, ipsum\r\n        dignissimos cumque fugiat labore nemo perspiciatis culpa. Aliquam eius\r\n        quasi, provident vero officiis dolorem quia consequatur minima,\r\n        temporibus laudantium accusantium in, corrupti culpa molestias.\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth: { isLoggedIn } }) => ({\r\n  isLoggedIn\r\n});\r\n\r\nProfile.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  setAuthStatusFalse: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { setAuthStatusFalse })(Profile);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { setAuthStatusTrue } from '../../redux/auth/authActions';\r\n\r\nimport {\r\n  getItemFromStorage,\r\n  setItemToStorage\r\n} from '../../services/utils/localStorage';\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    userName: '',\r\n    userPassword: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    setAuthStatusTrue: PropTypes.func.isRequired,\r\n    isLoggedIn: PropTypes.bool.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('storage', this.handleStorageChanges);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('storage', this.handleStorageChanges);\r\n  }\r\n\r\n  handleStorageChanges = () => {\r\n    if (getItemFromStorage('isAuthorized')) {\r\n      this.props.setAuthStatusTrue();\r\n    }\r\n  };\r\n\r\n  handleInputChange = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmitForm = event => {\r\n    event.preventDefault();\r\n    const { userName, userPassword } = this.state;\r\n\r\n    this.checkAuthData(userName, userPassword);\r\n  };\r\n\r\n  checkAuthData = (name, password) => {\r\n    if (name === 'admin' && password === '12345') {\r\n      setItemToStorage('isAuthorized', true);\r\n      this.props.setAuthStatusTrue();\r\n\r\n      this.setState({ userName: '', userPassword: '' });\r\n    } else {\r\n      alert('The username or password you entered is incorrect');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { userName, userPassword } = this.state;\r\n    const { isLoggedIn } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to='/profile' />;\r\n    }\r\n\r\n    return (\r\n      <form\r\n        className='form-signin m-auto'\r\n        style={{ maxWidth: '320px' }}\r\n        onSubmit={this.handleSubmitForm}\r\n      >\r\n        <h1 className='h3 mb-3'>Please sign in</h1>\r\n\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          placeholder='Username'\r\n          name='userName'\r\n          autoFocus={true}\r\n          value={userName}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        />\r\n\r\n        <input\r\n          type='password'\r\n          className='form-control my-3'\r\n          placeholder='Password'\r\n          name='userPassword'\r\n          value={userPassword}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        />\r\n        <button className='btn btn-lg btn-dark btn-block' type='submit'>\r\n          Sign in\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth: { isLoggedIn } }) => ({\r\n  isLoggedIn\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAuthStatusTrue })(Login);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home/Home';\r\nimport News from './pages/News/News';\r\nimport NotFound from './pages/NotFound/NotFound';\r\nimport Profile from './pages/Profile/Profile';\r\nimport Login from './pages/Login/Login';\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route exact path='/' component={Home} />\r\n    <Route exact path='/news' component={News} />\r\n    <Route exact path='/profile' component={Profile} />\r\n    <Route exact path='/login' component={Login} />\r\n    <Route component={NotFound} />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nimport { setAuthStatusFalse } from '../../redux/auth/authActions';\r\n\r\nimport { setItemToStorage } from '../../services/utils/localStorage';\r\n\r\nimport './Header.css';\r\n\r\nconst Header = ({ setAuthStatusFalse }) => {\r\n  const renderLinks = links.map(({ label, linkTo, classes }) => (\r\n    <li className={classes} key={label}>\r\n      <NavLink exact className='nav-link' to={linkTo}>\r\n        {label}\r\n      </NavLink>\r\n    </li>\r\n  ));\r\n\r\n  const handleLogout = event => {\r\n    event.preventDefault();\r\n    setAuthStatusFalse();\r\n    setItemToStorage('isAuthorized', false);\r\n  };\r\n\r\n  return (\r\n    <header className='navbar navbar-expand-sm navbar-light bg-light'>\r\n      <Link to='/' className='navbar-brand'>\r\n        Logo\r\n      </Link>\r\n      <button\r\n        className='navbar-toggler'\r\n        type='button'\r\n        data-toggle='collapse'\r\n        data-target='#navbarNav'\r\n        aria-controls='navbarNav'\r\n        aria-expanded='false'\r\n        aria-label='Toggle navigation'\r\n      >\r\n        <span className='navbar-toggler-icon'></span>\r\n      </button>\r\n      <div className='collapse navbar-collapse' id='navbarNav'>\r\n        <ul className='navbar-nav w-100'>{renderLinks}</ul>\r\n\r\n        <a href='/login' onClick={handleLogout}>\r\n          Logout\r\n        </a>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst links = [\r\n  { label: 'Home', linkTo: '/', classes: 'nav-item' },\r\n  { label: 'News', linkTo: '/news', classes: 'nav-item' },\r\n  { label: 'Profile', linkTo: '/profile', classes: 'nav-item profile-link' },\r\n  { label: 'Login', linkTo: '/login', classes: 'nav-item' }\r\n];\r\n\r\nHeader.propTypes = {\r\n  setAuthStatusFalse: PropTypes.func\r\n};\r\n\r\nexport default connect(null, { setAuthStatusFalse })(Header);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport store from './redux/store';\r\n\r\nimport Routes from './routes';\r\n\r\nimport Header from './components/Header/Header';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => (\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <Header />\r\n      <div className='container py-3'>\r\n        <Routes />\r\n      </div>\r\n    </Provider>\r\n  </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}